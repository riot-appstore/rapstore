[{"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "auth", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "api", "model": "board"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "api", "model": "application"}}, {"model": "contenttypes.contenttype", "pk": 9, "fields": {"app_label": "api", "model": "transaction"}}, {"model": "contenttypes.contenttype", "pk": 10, "fields": {"app_label": "api", "model": "module"}}, {"model": "sessions.session", "pk": "kg2rofsomncul4sp6kpaq8ga33b5a2ie", "fields": {"session_data": "OGRiNDEyMDYwZDMyOTRjYTc3Yzc0MzAyMDUzZDYyNDkxMTY2M2E5ZDp7Il9hdXRoX3VzZXJfaGFzaCI6IjRjZDYzZDRhM2ZjMjk4ODNhOTkxY2VmNWJkY2FjNmFlMjJmNTE1YjciLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIyIn0=", "expire_date": "2018-03-01T13:41:04.550Z"}}, {"model": "api.transaction", "pk": 1, "fields": {"uuid": "e099e07c-11a5-11e8-83a0-0242ac160003"}}, {"model": "api.board", "pk": 1, "fields": {"internal_name": "nucleo-f334", "flash_program": "openocd", "display_name": "Nucleo-F334", "transaction": 1}}, {"model": "api.board", "pk": 2, "fields": {"internal_name": "arduino-duemilanove", "flash_program": "openocd", "display_name": "Arduino Duemilanove", "transaction": 1}}, {"model": "api.board", "pk": 3, "fields": {"internal_name": "chronos", "flash_program": "openocd", "display_name": "eZ430 Chronos", "transaction": 1}}, {"model": "api.board", "pk": 4, "fields": {"internal_name": "openmote-cc2538", "flash_program": "openocd", "display_name": "OpenMote", "transaction": 1}}, {"model": "api.board", "pk": 5, "fields": {"internal_name": "slwstk6220a", "flash_program": "openocd", "display_name": "SLWSSTK6220A", "transaction": 1}}, {"model": "api.board", "pk": 6, "fields": {"internal_name": "nucleo144-f767", "flash_program": "openocd", "display_name": "Nucleo144-F767", "transaction": 1}}, {"model": "api.board", "pk": 7, "fields": {"internal_name": "iotlab-m3", "flash_program": "openocd", "display_name": "IoT LAB M3", "transaction": 1}}, {"model": "api.board", "pk": 8, "fields": {"internal_name": "msba2", "flash_program": "openocd", "display_name": "MSBA2", "transaction": 1}}, {"model": "api.board", "pk": 9, "fields": {"internal_name": "mulle", "flash_program": "openocd", "display_name": "Mulle", "transaction": 1}}, {"model": "api.board", "pk": 10, "fields": {"internal_name": "nucleo-l073", "flash_program": "openocd", "display_name": "Nucleo-L073", "transaction": 1}}, {"model": "api.board", "pk": 11, "fields": {"internal_name": "opencm904", "flash_program": "openocd", "display_name": "OpenCM9.04", "transaction": 1}}, {"model": "api.board", "pk": 12, "fields": {"internal_name": "z1", "flash_program": "openocd", "display_name": "Zolertia Z1", "transaction": 1}}, {"model": "api.board", "pk": 13, "fields": {"internal_name": "nrf6310", "flash_program": "openocd", "display_name": "NRF6310", "transaction": 1}}, {"model": "api.board", "pk": 14, "fields": {"internal_name": "avsextrem", "flash_program": "openocd", "display_name": "AVS Extrem", "transaction": 1}}, {"model": "api.board", "pk": 15, "fields": {"internal_name": "remote-reva", "flash_program": "openocd", "display_name": "Zolertia remote Rev. A", "transaction": 1}}, {"model": "api.board", "pk": 16, "fields": {"internal_name": "stm32f3discovery", "flash_program": "openocd", "display_name": "STM32F3discovery", "transaction": 1}}, {"model": "api.board", "pk": 17, "fields": {"internal_name": "cc2538dk", "flash_program": "openocd", "display_name": "CC2538DK", "transaction": 1}}, {"model": "api.board", "pk": 18, "fields": {"internal_name": "nucleo32-f031", "flash_program": "openocd", "display_name": "Nucleo144-F031", "transaction": 1}}, {"model": "api.board", "pk": 19, "fields": {"internal_name": "ek-lm4f120xl", "flash_program": "openocd", "display_name": "EK-LM4F120XL", "transaction": 1}}, {"model": "api.board", "pk": 20, "fields": {"internal_name": "nucleo-f302", "flash_program": "openocd", "display_name": "Nucleo-F302", "transaction": 1}}, {"model": "api.board", "pk": 21, "fields": {"internal_name": "nucleo-l053", "flash_program": "openocd", "display_name": "Nucleo-L053", "transaction": 1}}, {"model": "api.board", "pk": 22, "fields": {"internal_name": "frdm-k64f", "flash_program": "openocd", "display_name": "FRDM-K64F", "transaction": 1}}, {"model": "api.board", "pk": 23, "fields": {"internal_name": "limifrog-v1", "flash_program": "openocd", "display_name": "LimiFrog-v1", "transaction": 1}}, {"model": "api.board", "pk": 24, "fields": {"internal_name": "wsn430-v1_3b", "flash_program": "openocd", "display_name": "WSN430 v1_3b", "transaction": 1}}, {"model": "api.board", "pk": 25, "fields": {"internal_name": "maple-mini", "flash_program": "openocd", "display_name": "Maple Mini", "transaction": 1}}, {"model": "api.board", "pk": 26, "fields": {"internal_name": "nucleo-f411", "flash_program": "openocd", "display_name": "Nucleo-F411", "transaction": 1}}, {"model": "api.board", "pk": 27, "fields": {"internal_name": "nucleo32-f042", "flash_program": "openocd", "display_name": "Nucleo144-F042", "transaction": 1}}, {"model": "api.board", "pk": 28, "fields": {"internal_name": "stm32f0discovery", "flash_program": "openocd", "display_name": "STM32F0discovery", "transaction": 1}}, {"model": "api.board", "pk": 29, "fields": {"internal_name": "nucleo144-f303", "flash_program": "openocd", "display_name": "Nucleo144-F303", "transaction": 1}}, {"model": "api.board", "pk": 30, "fields": {"internal_name": "nucleo32-f303", "flash_program": "openocd", "display_name": "Nucleo144-F303", "transaction": 1}}, {"model": "api.board", "pk": 31, "fields": {"internal_name": "mips-malta", "flash_program": "openocd", "display_name": "MIPS Malta", "transaction": 1}}, {"model": "api.board", "pk": 32, "fields": {"internal_name": "sodaq-explorer", "flash_program": "openocd", "display_name": "SODAQ ExpLoRer", "transaction": 1}}, {"model": "api.board", "pk": 33, "fields": {"internal_name": "mbed_lpc1768", "flash_program": "openocd", "display_name": "mbed_lpc1768", "transaction": 1}}, {"model": "api.board", "pk": 34, "fields": {"internal_name": "nucleo-f103", "flash_program": "openocd", "display_name": "Nucleo-F103", "transaction": 1}}, {"model": "api.board", "pk": 35, "fields": {"internal_name": "msb-430", "flash_program": "openocd", "display_name": "MSB-430", "transaction": 1}}, {"model": "api.board", "pk": 36, "fields": {"internal_name": "pba-d-01-kw2x", "flash_program": "openocd", "display_name": "Phytec phyWAVE-KW22", "transaction": 1}}, {"model": "api.board", "pk": 37, "fields": {"internal_name": "nz32-sc151", "flash_program": "openocd", "display_name": "NZ32-SC151", "transaction": 1}}, {"model": "api.board", "pk": 38, "fields": {"internal_name": "remote-pa", "flash_program": "openocd", "display_name": "Zolertia remote (Prototype)", "transaction": 1}}, {"model": "api.board", "pk": 39, "fields": {"internal_name": "nucleo-f207zg", "flash_program": "openocd", "display_name": "nucleo-f207zg", "transaction": 1}}, {"model": "api.board", "pk": 40, "fields": {"internal_name": "samd21-xpro", "flash_program": "openocd", "display_name": "SAMD21-xpro", "transaction": 1}}, {"model": "api.board", "pk": 41, "fields": {"internal_name": "samr21-xpro", "flash_program": "openocd", "display_name": "SAMR21-xpro", "transaction": 1}}, {"model": "api.board", "pk": 42, "fields": {"internal_name": "nucleo144-f429", "flash_program": "openocd", "display_name": "Nucleo144-F429", "transaction": 1}}, {"model": "api.board", "pk": 43, "fields": {"internal_name": "nucleo32-l432", "flash_program": "openocd", "display_name": "Nucleo144-F432", "transaction": 1}}, {"model": "api.board", "pk": 44, "fields": {"internal_name": "nucleo-f410", "flash_program": "openocd", "display_name": "Nucleo-F410", "transaction": 1}}, {"model": "api.board", "pk": 45, "fields": {"internal_name": "arduino-due", "flash_program": "openocd", "display_name": "Arduino Due", "transaction": 1}}, {"model": "api.board", "pk": 46, "fields": {"internal_name": "pic32-wifire", "flash_program": "openocd", "display_name": "PIC32 WiFire", "transaction": 1}}, {"model": "api.board", "pk": 47, "fields": {"internal_name": "saml21-xpro", "flash_program": "openocd", "display_name": "SAML21-xpro", "transaction": 1}}, {"model": "api.board", "pk": 48, "fields": {"internal_name": "nucleo144-f746", "flash_program": "openocd", "display_name": "Nucleo144-F746", "transaction": 1}}, {"model": "api.board", "pk": 49, "fields": {"internal_name": "msbiot", "flash_program": "openocd", "display_name": "MSB-IoT", "transaction": 1}}, {"model": "api.board", "pk": 50, "fields": {"internal_name": "feather-m0", "flash_program": "openocd", "display_name": "Adafruit Feather M0", "transaction": 1}}, {"model": "api.board", "pk": 51, "fields": {"internal_name": "nrf52dk", "flash_program": "openocd", "display_name": "NRF52DK", "transaction": 1}}, {"model": "api.board", "pk": 52, "fields": {"internal_name": "airfy-beacon", "flash_program": "openocd", "display_name": "Airfy Beacon", "transaction": 1}}, {"model": "api.board", "pk": 53, "fields": {"internal_name": "teensy31", "flash_program": "openocd", "display_name": "teensy31", "transaction": 1}}, {"model": "api.board", "pk": 54, "fields": {"internal_name": "nucleo-f091", "flash_program": "openocd", "display_name": "Nucleo-F091", "transaction": 1}}, {"model": "api.board", "pk": 55, "fields": {"internal_name": "nucleo-f446", "flash_program": "openocd", "display_name": "Nucleo-F446", "transaction": 1}}, {"model": "api.board", "pk": 56, "fields": {"internal_name": "nucleo-l476", "flash_program": "openocd", "display_name": "Nucleo-L467", "transaction": 1}}, {"model": "api.board", "pk": 57, "fields": {"internal_name": "nrf52840dk", "flash_program": "openocd", "display_name": "NRF52840DK", "transaction": 1}}, {"model": "api.board", "pk": 58, "fields": {"internal_name": "stm32f7discovery", "flash_program": "openocd", "display_name": "STM32F7discovery", "transaction": 1}}, {"model": "api.board", "pk": 59, "fields": {"internal_name": "sltb001a", "flash_program": "openocd", "display_name": "Silicon Labs", "transaction": 1}}, {"model": "api.board", "pk": 60, "fields": {"internal_name": "microbit", "flash_program": "openocd", "display_name": "micro:bit", "transaction": 1}}, {"model": "api.board", "pk": 61, "fields": {"internal_name": "nucleo-f070", "flash_program": "openocd", "display_name": "Nucleo-F070", "transaction": 1}}, {"model": "api.board", "pk": 62, "fields": {"internal_name": "nucleo144-f412", "flash_program": "openocd", "display_name": "Nucleo144-F412", "transaction": 1}}, {"model": "api.board", "pk": 63, "fields": {"internal_name": "yunjia-nrf51822", "flash_program": "openocd", "display_name": "yunjia-nrf51822", "transaction": 1}}, {"model": "api.board", "pk": 64, "fields": {"internal_name": "telosb", "flash_program": "openocd", "display_name": "TelosB", "transaction": 1}}, {"model": "api.board", "pk": 65, "fields": {"internal_name": "nucleo144-f446", "flash_program": "openocd", "display_name": "Nucleo144-F446", "transaction": 1}}, {"model": "api.board", "pk": 66, "fields": {"internal_name": "ikea-tradfri", "flash_program": "openocd", "display_name": "IKEA TR\u00c5DFRI", "transaction": 1}}, {"model": "api.board", "pk": 67, "fields": {"internal_name": "b-l475e-iot01a", "flash_program": "openocd", "display_name": "STMicroelectronics B-L475E-IOT01A", "transaction": 1}}, {"model": "api.board", "pk": 68, "fields": {"internal_name": "nucleo-f401", "flash_program": "openocd", "display_name": "Nucleo-F401", "transaction": 1}}, {"model": "api.board", "pk": 69, "fields": {"internal_name": "acd52832", "flash_program": "openocd", "display_name": "aconno ACD52832", "transaction": 1}}, {"model": "api.board", "pk": 70, "fields": {"internal_name": "stm32f4discovery", "flash_program": "openocd", "display_name": "STM32F4discovery", "transaction": 1}}, {"model": "api.board", "pk": 71, "fields": {"internal_name": "frdm-k22f", "flash_program": "openocd", "display_name": "FRDM-K22F", "transaction": 1}}, {"model": "api.board", "pk": 72, "fields": {"internal_name": "sodaq-autonomo", "flash_program": "openocd", "display_name": "SODAQ Autonomo", "transaction": 1}}, {"model": "api.board", "pk": 73, "fields": {"internal_name": "spark-core", "flash_program": "openocd", "display_name": "Spark Core", "transaction": 1}}, {"model": "api.board", "pk": 74, "fields": {"internal_name": "nucleo-l152", "flash_program": "openocd", "display_name": "Nucleo-L152", "transaction": 1}}, {"model": "api.board", "pk": 75, "fields": {"internal_name": "waspmote-pro", "flash_program": "openocd", "display_name": "Waspmote Pro", "transaction": 1}}, {"model": "api.board", "pk": 76, "fields": {"internal_name": "thingy52", "flash_program": "openocd", "display_name": "Nordic Thingy:52", "transaction": 1}}, {"model": "api.board", "pk": 77, "fields": {"internal_name": "nucleo-f303", "flash_program": "openocd", "display_name": "Nucleo-F303", "transaction": 1}}, {"model": "api.board", "pk": 78, "fields": {"internal_name": "arduino-mega2560", "flash_program": "openocd", "display_name": "Arduino Mega2560", "transaction": 1}}, {"model": "api.board", "pk": 79, "fields": {"internal_name": "iotlab-a8-m3", "flash_program": "openocd", "display_name": "IoT LAB A8-M3", "transaction": 1}}, {"model": "api.board", "pk": 80, "fields": {"internal_name": "arduino-zero", "flash_program": "openocd", "display_name": "Arduino Zero", "transaction": 1}}, {"model": "api.board", "pk": 81, "fields": {"internal_name": "calliope-mini", "flash_program": "openocd", "display_name": "Calliope Mini", "transaction": 1}}, {"model": "api.board", "pk": 82, "fields": {"internal_name": "wsn430-v1_4", "flash_program": "openocd", "display_name": "WSN430 v1_4", "transaction": 1}}, {"model": "api.board", "pk": 83, "fields": {"internal_name": "udoo", "flash_program": "openocd", "display_name": "UDOO", "transaction": 1}}, {"model": "api.board", "pk": 84, "fields": {"internal_name": "nucleo32-l031", "flash_program": "openocd", "display_name": "Nucleo144-F031", "transaction": 1}}, {"model": "api.board", "pk": 85, "fields": {"internal_name": "nrf51dongle", "flash_program": "openocd", "display_name": "nRF51 Dongle", "transaction": 1}}, {"model": "api.board", "pk": 86, "fields": {"internal_name": "arduino-mkrzero", "flash_program": "openocd", "display_name": "Arduino MKR ZERO", "transaction": 1}}, {"model": "api.board", "pk": 87, "fields": {"internal_name": "ruuvitag", "flash_program": "openocd", "display_name": "RuuviTag", "transaction": 1}}, {"model": "api.board", "pk": 88, "fields": {"internal_name": "b-l072z-lrwan1", "flash_program": "openocd", "display_name": "STMicroelectronics B-L072Z-LRWAN1", "transaction": 1}}, {"model": "api.board", "pk": 89, "fields": {"internal_name": "seeeduino_arch-pro", "flash_program": "openocd", "display_name": "Seeeduino Arch-Pro", "transaction": 1}}, {"model": "api.board", "pk": 90, "fields": {"internal_name": "cc2650-launchpad", "flash_program": "openocd", "display_name": "CC2650 LaunchPad", "transaction": 1}}, {"model": "api.board", "pk": 91, "fields": {"internal_name": "nucleo-f030", "flash_program": "openocd", "display_name": "Nucleo-F030", "transaction": 1}}, {"model": "api.board", "pk": 92, "fields": {"internal_name": "arduino-mkr1000", "flash_program": "openocd", "display_name": "Arduino MKR1000", "transaction": 1}}, {"model": "api.board", "pk": 93, "fields": {"internal_name": "bluepill", "flash_program": "openocd", "display_name": "Blue Pill", "transaction": 1}}, {"model": "api.board", "pk": 94, "fields": {"internal_name": "nucleo-f072", "flash_program": "openocd", "display_name": "Nucleo-F072", "transaction": 1}}, {"model": "api.board", "pk": 95, "fields": {"internal_name": "fox", "flash_program": "openocd", "display_name": "HikoB Fox", "transaction": 1}}, {"model": "api.board", "pk": 96, "fields": {"internal_name": "arduino-uno", "flash_program": "openocd", "display_name": "Arduino Uno", "transaction": 1}}, {"model": "api.board", "pk": 97, "fields": {"internal_name": "nucleo144-f722", "flash_program": "openocd", "display_name": "Nucleo144-F722", "transaction": 1}}, {"model": "api.board", "pk": 98, "fields": {"internal_name": "msb-430h", "flash_program": "openocd", "display_name": "MSB-430H", "transaction": 1}}, {"model": "api.board", "pk": 99, "fields": {"internal_name": "arduino-mkrfox1200", "flash_program": "openocd", "display_name": "arduino-mkrfox1200", "transaction": 1}}, {"model": "api.board", "pk": 100, "fields": {"internal_name": "f4vi1", "flash_program": "openocd", "display_name": "F4VI1", "transaction": 1}}, {"model": "api.board", "pk": 101, "fields": {"internal_name": "cc2650stk", "flash_program": "openocd", "display_name": "CC2650STK", "transaction": 1}}, {"model": "api.board", "pk": 102, "fields": {"internal_name": "pic32-clicker", "flash_program": "openocd", "display_name": "PIC32 Clicker", "transaction": 1}}, {"model": "api.board", "pk": 103, "fields": {"internal_name": "remote-revb", "flash_program": "openocd", "display_name": "Zolertia remote Rev. B", "transaction": 1}}, {"model": "api.board", "pk": 104, "fields": {"internal_name": "nucleo144-f413", "flash_program": "openocd", "display_name": "Nucleo144-F413", "transaction": 1}}, {"model": "api.application", "pk": 1, "fields": {"name": "gnrc_minimal", "path": "/RIOT/examples/gnrc_minimal", "description": "Showing minimum memory footprint of gnrc network stack", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 2, "fields": {"name": "ccn-lite-relay", "path": "/RIOT/examples/ccn-lite-relay", "description": "Basic ccn-lite relay example (produce and consumer via shell)", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 3, "fields": {"name": "gcoap_example", "path": "/RIOT/examples/gcoap", "description": "gcoap example", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 4, "fields": {"name": "arduino_hello-world", "path": "/RIOT/examples/arduino_hello-world", "description": "", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 5, "fields": {"name": "ipc_pingpong", "path": "/RIOT/examples/ipc_pingpong", "description": "IPC pingpong application", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 6, "fields": {"name": "default", "path": "/RIOT/examples/default", "description": "Default application that shows a lot of functionality of RIOT", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 7, "fields": {"name": "riot_and_cpp", "path": "/RIOT/examples/riot_and_cpp", "description": "", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 8, "fields": {"name": "bindist", "path": "/RIOT/examples/bindist", "description": "Binary distribution exampleThis application serves as simple example for &quot;make bindist&quot;, a makefiletarget that can be used to ship proprietary, compiled objects togetherwith a compiled binary in a way that allows re-linking and makesverification possible.", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 9, "fields": {"name": "gnrc_border_router", "path": "/RIOT/examples/gnrc_border_router", "description": "Example application for demonstrating the RIOT network stack", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 10, "fields": {"name": "saul_example", "path": "/RIOT/examples/saul", "description": "Example for demonstrating SAUL and the SAUL registry", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 11, "fields": {"name": "gnrc_networking_mac", "path": "/RIOT/examples/gnrc_networking_mac", "description": "Example application for demonstrating the RIOT network stack", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 12, "fields": {"name": "emcute_example", "path": "/RIOT/examples/emcute", "description": "Example application for demonstrating the RIOT network stack", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 13, "fields": {"name": "riot_javascript", "path": "/RIOT/examples/javascript", "description": "Example of how to use javascript on RIOT", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 14, "fields": {"name": "timer_periodic_wakeup", "path": "/RIOT/examples/timer_periodic_wakeup", "description": "example application for setting a periodic wakeup", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 15, "fields": {"name": "hello-world", "path": "/RIOT/examples/hello-world", "description": "Hello World application", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 16, "fields": {"name": "posix_sockets_example", "path": "/RIOT/examples/posix_sockets", "description": "Example application for demonstrating the RIOT&#39;s POSIX sockets", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 17, "fields": {"name": "gnrc_networking", "path": "/RIOT/examples/gnrc_networking", "description": "Example application for demonstrating the RIOT network stack", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 18, "fields": {"name": "dtls_echo", "path": "/RIOT/examples/dtls-echo", "description": "Example application  for TinyDTLS", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 19, "fields": {"name": "nanocoap_server", "path": "/RIOT/examples/nanocoap_server", "description": "CoAP example server application (using nanocoap)", "group_identifier": "examples", "transaction": 1}}, {"model": "api.application", "pk": 20, "fields": {"name": "gnrc_tftp_example", "path": "/RIOT/examples/gnrc_tftp", "description": "Example application for demonstrating the RIOT TFTP stack", "group_identifier": "examples", "transaction": 1}}, {"model": "api.module", "pk": 1, "fields": {"name": "can", "path": "/RIOT/sys/can", "description": "", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 2, "fields": {"name": "color", "path": "/RIOT/sys/color", "description": "The color sys module supports handling RGB and HSV color", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 3, "fields": {"name": "newlib_syscalls_default", "path": "/RIOT/sys/newlib_syscalls_default", "description": "", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 4, "fields": {"name": "fmt", "path": "/RIOT/sys/fmt", "description": "Provides simple string formatting functionsThe goal of this API is to provide a string formatting interface which has areduced code size footprint compared to the libc provided stdio.h functionality.This library provides a set of formatting and printing functions for 64 bitintegers, even when the C library was built without support for 64 bitformatting (newlib-nano).\\note The print functions in this library do not buffer any output.Mixing calls to standard @c printf from stdio.h with the @c print_xxxfunctions in fmt, especially on the same output line, may cause garbledoutput.", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 5, "fields": {"name": "ps", "path": "/RIOT/sys/ps", "description": "Show list with all threads", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 6, "fields": {"name": "ubjson", "path": "/RIOT/sys/ubjson", "description": "A library to read and write UBJSON serialized data.", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 7, "fields": {"name": "arduino", "path": "/RIOT/sys/arduino", "description": "Arduino in RIOT", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 8, "fields": {"name": "div", "path": "/RIOT/sys/div", "description": "Integer division functionsThis header provides some integer division functions that can be usedto prevent linking in compiler-generated ones, which are often larger.", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 9, "fields": {"name": "cpp11-compat", "path": "/RIOT/sys/cpp11-compat", "description": "drop in replacement to enable C++11-like thread, mutex and condition_variable", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 10, "fields": {"name": "saul_reg", "path": "/RIOT/sys/saul_reg", "description": "Global sensor/actuator registry for SAUL devices", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 11, "fields": {"name": "base64", "path": "/RIOT/sys/base64", "description": "base64 encoder and decoder", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 12, "fields": {"name": "vfs", "path": "/RIOT/sys/vfs", "description": "Provides an interface for accessing files and directories fromdifferent devices and file systemsThis layer is modeled as a mix between POSIX syscalls (e.g. open) and theLinux VFS layer implementation, with major reductions in the feature set, inorder to fit the resource constrained platforms that RIOT targets.The overall design goals are:- Provide implementations for all newlib &quot;file&quot; syscalls- Keep it simple, do not add every possible file operation from Linux VFS.- Easy to map existing file system implementations for resource constrained systems onto the VFS layer API- Avoid keeping a central `enum` of all file system drivers that has to be kept up to date with external packages etc.- Use POSIX `&lt;errno.h&gt;` numbers as negative return codes for errors, avoid the global `errno` variable.- Only absolute paths to files (no per-process working directory)- No dynamic memory allocationThe API should be easy to understand for users who are familiar with thePOSIX file functions (open, close, read, write, fstat, lseek etc.)The VFS layer keeps track of mounted file systems and open files, the`vfs_open` function searches the array of mounted file systems and dispatchesthe call to the file system instance with the longest matching mount point prefix.Subsequent calls to `vfs_read`, `vfs_write`, etc will do a look up in thetable of open files and dispatch the call to the correct file system driverfor handling.`vfs_mount` takes a string containing the mount point, a file system driverspecification (`struct file_system`), and an opaque pointer that only the FSdriver knows how to use, which can be used to keep driver parameters in orderto allow dynamic handling of multiple devices.", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 13, "fields": {"name": "universal_address", "path": "/RIOT/sys/universal_address", "description": "universal address container", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 14, "fields": {"name": "hashes", "path": "/RIOT/sys/hashes", "description": "Hash function API", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 15, "fields": {"name": "phydat", "path": "/RIOT/sys/phydat", "description": "Generic data container for physical data and utility functionsThe purpose of this module is to introduce a common view on physical datathroughout RIOT. This data is typically the output from sensor readings, dataaggregation, and also the input for actuators.The idea is to enable different sensor/actuator drivers and other RIOTmodules to exchange and have the same view on this kind of data. Labelingdata with a unit type it&#39;s scaling makes it possible to pipe data betweenmodules in an automated fashion without the need of specialized softwarewrappers and/or data normalization modules.", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 16, "fields": {"name": "cbor", "path": "/RIOT/sys/cbor", "description": "CBOR serializer/deserializerThis is an implementation suited for constrained devicesCharacteristics:- No dynamic memory allocation (i.e. no calls to `malloc()`, `free()`) usedthroughout the implementation- User may allocate static buffers, this implementation uses the spaceprovided by them (cf. @ref cbor_stream_t)# Supported types (categorized by major type (MT))- Major type 0 (unsigned integer): Full support. Relevant functions:- cbor_serialize_int(), cbor_deserialize_int()- cbor_serialize_uint64_t(), cbor_deserialize_uint64_t()- Major type 1 (negative integer): Full support. Relevant functions:- cbor_serialize_int(), cbor_deserialize_int()- cbor_serialize_int64_t(), cbor_deserialize_int64_t()- Major type 2 (byte string): Full support. Relevant functions:- cbor_serialize_byte_string(), cbor_deserialize_byte_string()- Major type 3 (unicode string): Basic support (see below). Relevant functions:- cbor_serialize_unicode_string(), cbor_deserialize_unicode_string()- Major type 4 (array of data items): Full support. Relevant functions:- cbor_serialize_array(), cbor_deserialize_array()- cbor_serialize_array_indefinite(), cbor_deserialize_array_indefinite(),cbor_at_break()- Major type 5 (map of pairs of data items): Full support. Relevant functions:- cbor_serialize_map(), cbor_deserialize_map()- cbor_serialize_map_indefinite(), cbor_deserialize_map_indefinite(),cbor_at_break()- Major type 6 (optional semantic tagging of other major types): Basicsupport (see below). Relevant functions:- cbor_write_tag()- cbor_deserialize_date_time()- cbor_serialize_date_time()- Major type 7 (floating-point numbers and values with no content): Basicsupport (see below). Relevant functions:- cbor_serialize_float_half(), cbor_deserialize_float_half()- cbor_serialize_float(), cbor_deserialize_float()- cbor_serialize_double(), cbor_deserialize_double()- cbor_serialize_bool(), cbor_deserialize_bool()## Notes about major type 3Since we do not have a standardised C type for representing Unicode codepoints, we just provide API to serialize/deserialize `char` arrays. Theuser then has to transform that into a meaningful representation## Notes about major type 6Encoding date and time: date/time strings that follow the standard formatdescribed in[RFC3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6):|             Date/Time string | Support       || ---------------------------: | :------------ ||         2003-12-13T18:30:02Z | supported     ||      2003-12-13T18:30:02.25Z | not supported ||    2003-12-13T18:30:02+01:00 | not supported || 2003-12-13T18:30:02.25+01:00 | not supported |Since we do not have C types for representingbignums/bigfloats/decimal-fraction we do not provide API toserialize/deserialize them at all. You can still read out the actual dataitem behind the tag (via cbor_deserialize_byte_string()) and interpret ityourself.", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 17, "fields": {"name": "pipe", "path": "/RIOT/sys/pipe", "description": "Generic pipe implementation.", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 18, "fields": {"name": "fs", "path": "/RIOT/sys/fs", "description": "File system libraries/", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 19, "fields": {"name": "auto_init", "path": "/RIOT/sys/auto_init", "description": "Auto initialize modules", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 20, "fields": {"name": "quad_math", "path": "/RIOT/sys/quad_math", "description": "", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 21, "fields": {"name": "event", "path": "/RIOT/sys/event", "description": "Provides an Event loopThis module offers an event queue framework like libevent or libuev.An event queue is basically a FIFO queue of events, with some functions toefficiently and safely handle adding and getting events to / from such aqueue.An event queue is bound to a thread, but any thread or ISR can put eventsinto a queue.An event is a structure containing a pointer to an event handler. It can beextended to provide context or arguments to the handler.  It can also beembedded into existing structures (see examples).Compared to msg or mbox, this some fundamental differences:1. events are &quot;sender allocated&quot;. Unlike msg_send(), event_post() neverblocks or fails.2. events contain everything necessary to handle them, thus a threadprocessing the events of an event queue doesn&#39;t need to be changed inorder to support new event types.3. events can be safely used (and actually perform best) when used withinone thread, e.g., in order to create a state-machine like process flow.This is not (easily) possible using msg queues, as they might fill up.4. an event can only be queued in one event queue at the same time.Notifying many queues using only one event object is not possible withthis imlementation.At the core, event_wait() uses thread flags to implement waiting for eventsto be queued. Thus event queues can be used safely and efficiently in combinationwith thread flags and msg queues.Examples:~~~~~~~~~~~~~~~~~~~~~~~~ {.c}// simple event handlerstatic void handler(event_t *event){printf(&quot;triggered 0x%08x\\n&quot;, (unsigned)event);}static event_t event = { .handler = handler };static event_queue_t queue;int main(void){event_queue_init(&amp;queue);event_loop(&amp;queue);}[...] event_post(&amp;queue, &amp;event);// example for event extended event structtypedef struct {event_t super;const char *text;} custom_event_t;static void custom_handler(event_t *event){custom_event_t *custom_event = (custom_event_t *)event;printf(&quot;triggered custom event with text: \\&quot;%s\\&quot;\\n&quot;, custom_event-&gt;text);}static custom_event_t custom_event = { .super.handler = custom_handler, .text = &quot;CUSTOM EVENT&quot; };[...] event_post(&amp;queue, &amp;custom_event)~~~~~~~~~~~~~~~~~~~~~~~~", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 22, "fields": {"name": "checksum", "path": "/RIOT/sys/checksum", "description": "Checksum function librariesThis module provides a number of checksum functions. Most notably is the", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 23, "fields": {"name": "rtt_stdio", "path": "/RIOT/sys/rtt_stdio", "description": "stdio init/read/write functions for SEGGER RTT. This isdesigned to shadow the functions in uart_stdio", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 24, "fields": {"name": "luid", "path": "/RIOT/sys/luid", "description": "Generate system wide (locally) unique IDsThis module generates system wide, variable length unique IDs based on on thecpuid module. If the cpuid module is not present, the module falls back to apre-defined, constant seed for creating unique IDs.The main purpose of this module is to have a unified way for e.g. creatinghardware addresses and similar.The IDs generated by this module are base created from a constant base partand a dynamic portion, which is XORed into the base ID. If the cpuid moduleis present, the base ID is created from the CPU&#39;s unique ID. If not, thebase ID is created by simple &#39;memsetting&#39; the base ID with the definedbackup seed value.Once the base ID is generated, a LUID is generated by (i) XORing a countervalue with the LSB of the base ID, or (ii) by XORing the least significantbyes with a value given by the user.Example: Calling `luid_base(&amp;buf, 8)` will always yield an identical  value,independent how often the function is called. But calling`luid_base(&amp;buf, 2)` afterwards will results in a different value, if thecpuid module is present, and in the same (but shorter) value if not.Example: Calling `luid_get(&amp;buf, 8)` four times in a row, will yield fourdifferent IDs, differing in their LSB.Example: Calling `luid_custom(&amp;buf, 8, 123)` will always yield the samevalue, but calling `luid_custom(&amp;buf, 8, 124)` will differ.", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 25, "fields": {"name": "analog_util", "path": "/RIOT/sys/analog_util", "description": "Utility functions for converting analog data samples", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 26, "fields": {"name": "timex", "path": "/RIOT/sys/timex", "description": "Timestamp representation, computation, and conversion", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 27, "fields": {"name": "evtimer", "path": "/RIOT/sys/evtimer", "description": "Provides timers for events up to @$2^{32}@$ milliseconds in thefuture", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 28, "fields": {"name": "bloom", "path": "/RIOT/sys/bloom", "description": "Bloom filter library", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 29, "fields": {"name": "xtimer", "path": "/RIOT/sys/xtimer", "description": "Provides a high level timer module to registertimers, get current system time, and let a thread sleep fora certain amount of time.The implementation takes one low-level timer and multiplexes it.Insertion and removal of timers has O(n) complexity with (n) being thenumber of active timers.  The reason for this is that multiplexing isrealized by next-first singly linked lists.", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 30, "fields": {"name": "bitfield", "path": "/RIOT/sys/bitfield", "description": "Bitfields of arbitrary length", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 31, "fields": {"name": "random", "path": "/RIOT/sys/random", "description": "Pseudo Random Number Generator (PRNG)", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 32, "fields": {"name": "tsrb", "path": "/RIOT/sys/tsrb", "description": "Thread-safe ringbuffer implementation", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 33, "fields": {"name": "ecc", "path": "/RIOT/sys/ecc", "description": "A collection of error correction code (ECC) algorithms./", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 34, "fields": {"name": "trickle", "path": "/RIOT/sys/trickle", "description": "Implementation of a generic Trickle Algorithm (RFC 6206)", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 35, "fields": {"name": "libc", "path": "/RIOT/sys/libc", "description": "", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 36, "fields": {"name": "isrpipe", "path": "/RIOT/sys/isrpipe", "description": "ISR -&gt; userspace pipe", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 37, "fields": {"name": "log", "path": "/RIOT/sys/log", "description": "", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 38, "fields": {"name": "oneway-malloc", "path": "/RIOT/sys/oneway-malloc", "description": "Simple malloc wrapper for SBRK", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 39, "fields": {"name": "uart_stdio", "path": "/RIOT/sys/uart_stdio", "description": "stdio init/read/write functions for UARTs", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 40, "fields": {"name": "seq", "path": "/RIOT/sys/seq", "description": "Serial Number Arithmetic (RFC 1982)", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 41, "fields": {"name": "od", "path": "/RIOT/sys/od", "description": "Allows to print out data dumps of memory regions in hexadecimal or/andASCII representation.", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 42, "fields": {"name": "pm_layered", "path": "/RIOT/sys/pm_layered", "description": "Layered low power mode infrastructure", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 43, "fields": {"name": "ssp", "path": "/RIOT/sys/ssp", "description": "Stack Smashing Protector (SSP) helper functions", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 44, "fields": {"name": "crypto", "path": "/RIOT/sys/crypto", "description": "RIOT provides a collection of block cipher ciphers, differentoperation modes and cryptographic hash algorithms.", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 45, "fields": {"name": "net", "path": "/RIOT/sys/net", "description": "Networking libraries/", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 46, "fields": {"name": "embunit", "path": "/RIOT/sys/embunit", "description": "", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 47, "fields": {"name": "mineplex", "path": "/RIOT/sys/mineplex", "description": "The Mineplex font for containing 5x5 pixel ASCII characters", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 48, "fields": {"name": "shell", "path": "/RIOT/sys/shell", "description": "Simple shell interpreter", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 49, "fields": {"name": "posix", "path": "/RIOT/sys/posix", "description": "POSIX header files", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 50, "fields": {"name": "sema", "path": "/RIOT/sys/sema", "description": "Lightweight semaphore implementation", "group_identifier": "sys", "transaction": 1}}, {"model": "api.module", "pk": 51, "fields": {"name": "libcoap", "path": "/RIOT/pkg/libcoap", "description": "", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 52, "fields": {"name": "oonf_api", "path": "/RIOT/pkg/oonf_api", "description": "", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 53, "fields": {"name": "u8g2", "path": "/RIOT/pkg/u8g2", "description": "Provides a monochrome graphics library for OLED and LCD displays", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 54, "fields": {"name": "minmea", "path": "/RIOT/pkg/minmea", "description": "Provides a GPS parser library to RIOT# Introduction&quot;Minmea is a minimalistic GPS parser library written in pure C intended forresource-constrained platforms, especially microcontrollers and other embeddedsystems.&quot;# LicenseLicensed under WTFPL.", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 55, "fields": {"name": "lwip", "path": "/RIOT/pkg/lwip", "description": "Provides the lwIP network stack", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 56, "fields": {"name": "umorse", "path": "/RIOT/pkg/umorse", "description": "Provides slim Morse encoding functionality", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 57, "fields": {"name": "spiffs", "path": "/RIOT/pkg/spiffs", "description": "Provides a file system for SPI NOR flash devices", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 58, "fields": {"name": "relic", "path": "/RIOT/pkg/relic", "description": "Provides the Relic cryptographic toolkit to RIOT# Configuration OptionsYou can pass along configuration flags for RELIC from your project makefile via:```export RELIC_CONFIG_FLAGS=-DARCH=NONE -DQUIET=off -DWORD=32 -DFP_PRIME=255 -DWITH=&quot;BN;MD;DV;FP;EP;CP;BC;EC&quot; -DSEED=ZERO```This should happen before the ```USEPKG``` line.# UsageJust put```USEPKG += relic```in your Makefile and```c#include &lt;relic.h&gt;```in your `main.c`.", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 59, "fields": {"name": "ccn-lite", "path": "/RIOT/pkg/ccn-lite", "description": "", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 60, "fields": {"name": "tinydtls", "path": "/RIOT/pkg/tinydtls", "description": "Provides the Eclipse TinyDTLS to RIOT", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 61, "fields": {"name": "tlsf", "path": "/RIOT/pkg/tlsf", "description": "", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 62, "fields": {"name": "libfixmath", "path": "/RIOT/pkg/libfixmath", "description": "Provides a cross platform fixed point maths library to RIOT.", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 63, "fields": {"name": "jsmn", "path": "/RIOT/pkg/jsmn", "description": "Provides a JSON parser library to RIOT", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 64, "fields": {"name": "tiny-asn1", "path": "/RIOT/pkg/tiny-asn1", "description": "Lightweight ASN.1 decoding/encoding library", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 65, "fields": {"name": "microcoap", "path": "/RIOT/pkg/microcoap", "description": "", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 66, "fields": {"name": "gecko_sdk", "path": "/RIOT/pkg/gecko_sdk", "description": "Vendor library for EFM/EFR/EZR32 targets by Silicon Labs", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 67, "fields": {"name": "micro-ecc", "path": "/RIOT/pkg/micro-ecc", "description": "Micro-ECC for RIOT# Micro-ECC for RIOTThis port of Micro-ECC to RIOT is based on the Micro-ECC[upstream](https://github.com/kmackay/micro-ecc) and adds `hwrng_read`(provided by RIOT) as the default RNG function if it is available on the targetplatform. This port also fixes a minor issue with unused variables in theupstream code.# Usage## BuildAdd```MakefileUSEPKG += micro-ecc```to your Makefile.## Choosing the right APIBefore using the Micro-ECC library, you need to check the `Makefile.features`of your target board to see if `periph_hwrng` is provided.If it is provided, you may safely use `uECC_make_key` to generate ECDSA keypairs and call `uECC_sign`/`uECC_verify` to sign/verify the ECDSA signatures.If not, you cannot use `uECC_make_key` or `uECC_sign` APIs anymore. The ECDSAkeys have to be generated on a platform with HWRNG support (e.g., `native`) andtransferred to your target device. You need to use `uECC_sign_deterministic` toperform ECDSA deterministic signing (standardized by RFC 6979). You can stilluse `uECC_verify` to verify the signatures from both signing APIs.**WARNING** Calling `uECC_make_key` and `uECC_sign` APIs on platforms withoutHWRNG support will lead to compile failure.Examples of using these uECC APIs can be found in the `test` folder of theMicro-ECC upstream.", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 68, "fields": {"name": "emb6", "path": "/RIOT/pkg/emb6", "description": "emb6 network stack", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 69, "fields": {"name": "fatfs", "path": "/RIOT/pkg/fatfs", "description": "Provides FAT file system support", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 70, "fields": {"name": "jerryscript", "path": "/RIOT/pkg/jerryscript", "description": "Provides Javascript support for RIOT", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 71, "fields": {"name": "nordic_softdevice_ble", "path": "/RIOT/pkg/nordic_softdevice_ble", "description": "", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 72, "fields": {"name": "heatshrink", "path": "/RIOT/pkg/heatshrink", "description": "Provides a lightweight compression library to RIOT# IntroductionThis package provides a compression library specifically developed formemory-constrained devices.# LicenseThe library is ISC licensed.", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 73, "fields": {"name": "openthread", "path": "/RIOT/pkg/openthread", "description": "Provides a RIOT adaption of the OpenThread network stack", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 74, "fields": {"name": "wakaama", "path": "/RIOT/pkg/wakaama", "description": "Provides the Wakaama implementation of LwM2M", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 75, "fields": {"name": "littlefs", "path": "/RIOT/pkg/littlefs", "description": "A little fail-safe filesystem designed for embedded systems", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 76, "fields": {"name": "semtech-loramac", "path": "/RIOT/pkg/semtech-loramac", "description": "Provides a RIOT adaption of Semtech LoRaMAC implementation# IntroductionThis package provides an API built on top of the[Semtech LoRaMAC-node](github.com/Lora-net/LoRaMac-node) referenceimplementation of a LoRa network.# Importing this package in an applicationThis package only works with Semtech SX1272 and SX1276 radio devices. Thus,in order to use it properly, the application `Makefile` must import thecorresponding device driver:```USEMODULE += sx1272  # for a SX1272 radio deviceUSEMODULE += sx1276  # for a SX1276 radio device```In order to use this package in an application, add the following inthe application `Makefile`:```USEPKG += semtech-loramac```Since the LoRa radio depends on regional parameters regarding the accessto the physical support, the region where the device is used needs to beset at compile time. Example for EU868:```CFLAGS += -DREGION_EU868```# Using the package APIThe package provides a simple API for initializing the MAC, setting/gettingparameters, joining a network and sending/receiving packets to/from a LoRaNetwork.In your `main.c`, some header files must be first included:```c#include &quot;net/loramac.h&quot;     /* core loramac definitions */#include &quot;semtech-loramac.h&quot; /* package API */#include &quot;sx127x.h&quot;          /* SX1272/6 device driver API */#include &quot;sx127x_params.h&quot;   /* SX1272/6 device driver initialization parameters */```Then define global variables:```csx127x_t sx127x;  /* SX1272/6 device descriptor *//* define the required keys for OTAA, e.g over-the-air activation (thenull arrays need to be updated with valid LoRa values) */static uint8_t deveui[LORAMAC_DEVEUI_LEN] = { 0x00, 0x00, 0x00, 0x00, \\0x00, 0x00, 0x00, 0x00 }static uint8_t appeui[LORAMAC_APPEUI_LEN] = { 0x00, 0x00, 0x00, 0x00, \\0x00, 0x00, 0x00, 0x00 }static uint8_t appeui[LORAMAC_APPKEY_LEN] = { 0x00, 0x00, 0x00, 0x00, \\0x00, 0x00, 0x00, 0x00, \\0x00, 0x00, 0x00, 0x00, \\0x00, 0x00, 0x00, 0x00 }```Now in the `main` function:1. setup the radio driver with the initialization parameters (spi bus, pins, etc)2. initialize the LoRaMAC MAC layer3. set the LoRa keys4. join the network5. send some data to the network```cint main(void){/* 1. setup the radio driver */sx127x_setup(&amp;sx127x, &amp;sx127x_params[0]);/* 2. initialize the LoRaMAC MAC layer */semtech_loramac_init(&amp;sx127x);/* 3. set the device required keys */semtech_loramac_set_deveui(deveui);semtech_loramac_set_appeui(appeui);semtech_loramac_set_appkey(appkey);/* 4. join the network */if (semtech_loramac_join(LORAMAC_JOIN_OTAA) != SEMTECH_LORAMAC_JOIN_SUCCEEDED) {puts(&quot;Join procedure failed&quot;);}puts(&quot;Join procedure succeeded&quot;);/* 5. send some data using confirmable mode on port 10 and assuming nodata is received */semtech_loramac_rx_data_t rx_data;semtech_loramac_send(LORAMAC_TX_CNF, 10,(uint8_t )&quot;This is RIOT&quot;, 13, &amp;rx_data);}```", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 77, "fields": {"name": "tweetnacl", "path": "/RIOT/pkg/tweetnacl", "description": "Provides the TweetNaCl high-security cryptographic library.# TweetNaCl RIOT packageTweetNaCl is the world&#39;s first auditable high-security cryptographic library.TweetNaCl fits into just 100 tweets while supporting all 25 of the C NaClfunctions used by applications. TweetNaCl is a self-contained public-domain Clibrary, so it can easily be integrated into applications.NaCl (pronounced &quot;salt&quot;) is a new easy-to-use high-speed software library fornetwork communication, encryption, decryption, signatures, etc. NaCl&#39;s goal isto provide all of the core operations needed to build higher-levelcryptographic tools.Of course, other libraries already exist for these core operations. NaCladvances the state of the art by improving security, by improving usability,and by improving speed.(from https://nacl.cr.yp.to/ and http://tweetnacl.cr.yp.to/)You can find the API and more information [here](https://nacl.cr.yp.to/), sincethe sources are not documented due to the aim for fitting in 100 tweets.## RequirementsTweetNaCl requires more than 2K of stack, so beware that you&#39;re allocating atleast `THREAD_STACKSIZE_DEFAULT + 2048` bytes.You can do it easily by adding:```makefileCFLAGS += &#39;-DTHREAD_STACKSIZE_MAIN=(THREAD_STACKSIZE_DEFAULT + 2048)&#39;```to your makefile.## UsageJust add it as a package in your application:```makefileUSEPKG += tweetnacl```And don&#39;t forget to include the header:```c#include &lt;tweetnacl.h&gt;```", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 78, "fields": {"name": "cmsis-dsp", "path": "/RIOT/pkg/cmsis-dsp", "description": "", "group_identifier": "pkg", "transaction": 1}}, {"model": "api.module", "pk": 79, "fields": {"name": "uart_half_duplex", "path": "/RIOT/drivers/uart_half_duplex", "description": "Driver implementation for half-duplex UART devices", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 80, "fields": {"name": "rn2xx3", "path": "/RIOT/drivers/rn2xx3", "description": "High-level driver for the RN2483/RN2903 LoRa modules", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 81, "fields": {"name": "feetech", "path": "/RIOT/drivers/feetech", "description": "Drivers for any device using feetech&#39;s servomotors communication bus.The bus is mainly used for servomotors, but a device can be anything : sensors, other actuators.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 82, "fields": {"name": "xbee", "path": "/RIOT/drivers/xbee", "description": "High-level driver for the XBee S1 802.15.4 modem", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 83, "fields": {"name": "hd44780", "path": "/RIOT/drivers/hd44780", "description": "Driver for the Hitachi HD44780 LCD driver", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 84, "fields": {"name": "sht11", "path": "/RIOT/drivers/sht11", "description": "Driver for Sensirion SHT11 Humidity and Temperature Sensor", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 85, "fields": {"name": "cc110x", "path": "/RIOT/drivers/cc110x", "description": "Driver for TI CC1100/CC1101 radios", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 86, "fields": {"name": "rgbled", "path": "/RIOT/drivers/rgbled", "description": "High-level driver for RGB-LEDs", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 87, "fields": {"name": "lsm6dsl", "path": "/RIOT/drivers/lsm6dsl", "description": "Device driver for the LSM6DSL 3D accelerometer/gyroscope", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 88, "fields": {"name": "w5100", "path": "/RIOT/drivers/w5100", "description": "Driver for W5100 ethernet devicesThis device driver only exposes the MACRAW mode of W5100 devices, so it doesnot offer any support for the on-chip IPv4, UDP, and TCP capabilities ofthese chips. In connection with RIOT we are only interested in the RAWEthernet packets, which we can use through netdev with any software networkstack provided by RIOT (e.g. GNRC). This enables W5100 devices to communicatevia IPv6, enables unlimited connections, and more...", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 89, "fields": {"name": "ata8520e", "path": "/RIOT/drivers/ata8520e", "description": "Device driver for Microchip ATA8520E transceiver (Sigfox)For more information, please refer to the datasheethttp://ww1.microchip.com/downloads/en/DeviceDoc/Atmel-9409-Smart-RF-ATA8520E_Datasheet.pdf", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 90, "fields": {"name": "lpd8808", "path": "/RIOT/drivers/lpd8808", "description": "Driver for LPD8808 based LED stripsLPD8808 based LED strips consist of a number of LEDs driven by LPD8808 chips.In these strips, each LED can be controlled individually. For this, every twoLEDs are driven by a LPD8808 chip, which are chained and form a long shiftregister. To control a certain LED, the target color value needs to beshifted to the LEDs position on the strip.This driver implementation does not buffer the current values for each LED.It expects the application to take care of this.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 91, "fields": {"name": "soft_spi", "path": "/RIOT/drivers/soft_spi", "description": "Software implemented Serial Peripheral Interface busThis module provides a software implemented Serial Peripheral Interface bus.It is intended to be used in situation where hardware spi is not available.The signatures of the functions are similar to the functions declared in spi.hThe clock speed is approximated by using xtimer_nanosleep.Currently only the use of MOSI in master mode is implemented. Therefore receivingdata from a slave is currently not possible.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 92, "fields": {"name": "at86rf2xx", "path": "/RIOT/drivers/at86rf2xx", "description": "Interface definition for AT86RF2xx based drivers", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 93, "fields": {"name": "srf08", "path": "/RIOT/drivers/srf08", "description": "Driver for the SRF08 ultrasonic range sensorThe connection between the MCU and the SRF08 is based on the i2c-interface.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 94, "fields": {"name": "kw2xrf", "path": "/RIOT/drivers/kw2xrf", "description": "Device driver for the NXP CR20A and KW2xD radios", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 95, "fields": {"name": "ds1307", "path": "/RIOT/drivers/ds1307", "description": "Device drive interface for the DS1307 real-time clock", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 96, "fields": {"name": "tja1042", "path": "/RIOT/drivers/tja1042", "description": "tja1042 High Speed CAN transceiver driver", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 97, "fields": {"name": "servo", "path": "/RIOT/drivers/servo", "description": "High-level driver for servo motors", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 98, "fields": {"name": "enc28j60", "path": "/RIOT/drivers/enc28j60", "description": "Driver for the ENC28J60 Ethernet Adapter", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 99, "fields": {"name": "mag3110", "path": "/RIOT/drivers/mag3110", "description": "Driver for the Freescale MAG3110 magnetometer.After initialization and set activ the magnetometerwill make measurements at periodic times.The output rate and over sample ratiocan be determined by magnetometer initialization.The measured values of magnetic field strength anddie temperature have uncalibrated offsets.To get correct measurement values, the individualoffsets must be measured and set accordingly.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 100, "fields": {"name": "lps331ap", "path": "/RIOT/drivers/lps331ap", "description": "Device driver for the LPS331AP pressure sensor", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 101, "fields": {"name": "sdcard_spi", "path": "/RIOT/drivers/sdcard_spi", "description": "Driver for reading and writing sd-cards via spi interface.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 102, "fields": {"name": "pcd8544", "path": "/RIOT/drivers/pcd8544", "description": "Driver for PCD8544 LCD displays", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 103, "fields": {"name": "at30tse75x", "path": "/RIOT/drivers/at30tse75x", "description": "Driver for the AT30TSE75x temperature sensor with serial EEPROM", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 104, "fields": {"name": "ethos", "path": "/RIOT/drivers/ethos", "description": "Driver for the ethernet-over-serial module", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 105, "fields": {"name": "adxl345", "path": "/RIOT/drivers/adxl345", "description": "Device driver interface for the ADXL345", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 106, "fields": {"name": "grove_ledbar", "path": "/RIOT/drivers/grove_ledbar", "description": "Driver for the Grove ledbar", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 107, "fields": {"name": "netdev_eth", "path": "/RIOT/drivers/netdev_eth", "description": "Common code for netdev ethernet drivers", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 108, "fields": {"name": "si70xx", "path": "/RIOT/drivers/si70xx", "description": "Driver for the Si7006/13/20/21 temperature and humidity sensor.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 109, "fields": {"name": "mtd", "path": "/RIOT/drivers/mtd", "description": "Low level Memory Technology Device interfaceGeneric memory technology device interface", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 110, "fields": {"name": "tsl2561", "path": "/RIOT/drivers/tsl2561", "description": "Device driver interface for the illuminance TSL2561 sensor", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 111, "fields": {"name": "lis3dh", "path": "/RIOT/drivers/lis3dh", "description": "Device driver for the LIS3DH accelerometer", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 112, "fields": {"name": "my9221", "path": "/RIOT/drivers/my9221", "description": "Driver for the MY-Semi MY9221 LED controller", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 113, "fields": {"name": "mtd_spi_nor", "path": "/RIOT/drivers/mtd_spi_nor", "description": "Driver for serial NOR flash memory technology devices attached via SPI", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 114, "fields": {"name": "isl29020", "path": "/RIOT/drivers/isl29020", "description": "Device driver for the ISL29020 light sensor", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 115, "fields": {"name": "l3g4200d", "path": "/RIOT/drivers/l3g4200d", "description": "Device driver for the L3G4200D gyroscope", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 116, "fields": {"name": "dht", "path": "/RIOT/drivers/dht", "description": "Device driver for the DHT Family of humidityand temperature sensors", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 117, "fields": {"name": "hts221", "path": "/RIOT/drivers/hts221", "description": "Driver for the ST HTS221 digital Humidity Sensor", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 118, "fields": {"name": "ina220", "path": "/RIOT/drivers/ina220", "description": "Device driver for Texas Instruments INA220 High or Low Side,Bi-Directional CURRENT/POWER MONITOR with Two-Wire Interface", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 119, "fields": {"name": "encx24j600", "path": "/RIOT/drivers/encx24j600", "description": "Driver for the ENCX24J600 Ethernet Adapter", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 120, "fields": {"name": "mpu9150", "path": "/RIOT/drivers/mpu9150", "description": "Device driver interface for the MPU-9150", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 121, "fields": {"name": "slipdev", "path": "/RIOT/drivers/slipdev", "description": "SLIP network device over @ref drivers_periph_uart", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 122, "fields": {"name": "netdev_ieee802154", "path": "/RIOT/drivers/netdev_ieee802154", "description": "", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 123, "fields": {"name": "tcs37727", "path": "/RIOT/drivers/tcs37727", "description": "Driver for the AMS TCS37727 Color Light-To-Digital Converter", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 124, "fields": {"name": "saul", "path": "/RIOT/drivers/saul", "description": "Generic sensor/actuator abstraction layer for RIOTSAUL is a generic actuator/sensor interface in RIOT. Its purpose is toenable unified interaction with a wide range of sensors and actuators througha set of defined access functions and a common data structure.Each device driver implementing this interface has to expose a set ofpredefined functions and it has to register itself to the central SAULregistry. From here devices can be found, listed, and accessed.Each device has further to expose a name and its type. This information canbe used for automated searching and matching of devices (e.g. connect lightsensor automatically with the color of an RGB LED...).The SAUL module enables further the automated initialization of preconfiguredactuators/sensor via auto_init and the access to all available devices viaone unified shell command.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 125, "fields": {"name": "hih6130", "path": "/RIOT/drivers/hih6130", "description": "Device driver for Honeywell HumidIcon DigitalHumidity/Temperature Sensors: HIH-6130/6131 Series", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 126, "fields": {"name": "veml6070", "path": "/RIOT/drivers/veml6070", "description": "Device driver interface for the VEML6070 UV sensor", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 127, "fields": {"name": "nvram", "path": "/RIOT/drivers/nvram", "description": "Non-volatile RAM interfaceThis API is designed around non-volatile memories which do not need blockwiseerase, such as ferro-electric RAM (FRAM) or magneto-resistive RAM (MRAM).This interface is not suitable for flash memories.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 128, "fields": {"name": "srf02", "path": "/RIOT/drivers/srf02", "description": "Driver for the SRF02 ultrasonic range sensor", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 129, "fields": {"name": "can_trx", "path": "/RIOT/drivers/can_trx", "description": "generic transceiver interface", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 130, "fields": {"name": "cc2420", "path": "/RIOT/drivers/cc2420", "description": "Interface definition for the CC2420 driver", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 131, "fields": {"name": "lis3mdl", "path": "/RIOT/drivers/lis3mdl", "description": "Device driver for the LIS3MDL 3-axis magnetometer", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 132, "fields": {"name": "nrf24l01p", "path": "/RIOT/drivers/nrf24l01p", "description": "Low-level driver for nrf24l01+ transceiver", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 133, "fields": {"name": "mq3", "path": "/RIOT/drivers/mq3", "description": "Device driver for the MQ-3 alcohol sensor", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 134, "fields": {"name": "isl29125", "path": "/RIOT/drivers/isl29125", "description": "Device driver for the ISL29125 RGB light sensor## DescriptionThe device supports level conversion in 12, and 16 bit depth perchannel. Selecting a higher precision results in a longerconversion time.The driver uses the @ref color_rgb_t color definition from @refcolor.h for value representation. It does not depend on the colormodule however.## UsageExamine `tests/driver_isr29125` for an exemplary application usingthis driver.## CaveatsA GPIO pin definition has been included in the interface for futurecompatibility only.- The driver does not support SYNC mode at the moment.- The driver supports polling only, i.e. interrupt mode iscurrently not supported.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 135, "fields": {"name": "periph_common", "path": "/RIOT/drivers/periph_common", "description": "", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 136, "fields": {"name": "bmp180", "path": "/RIOT/drivers/bmp180", "description": "Device driver interface for the BMP180 sensor.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 137, "fields": {"name": "mma8x5x", "path": "/RIOT/drivers/mma8x5x", "description": "Driver for the Freescale MMA8x5x 3-Axis accelerometer.The driver will initialize the accelerometer for bestresolution. After the initialization the accelerometer will makemeasurements at periodic times. The measurements period andscale range can be determined by accelerometer initialization.This driver only implements basic functionality (i.e. no supportfor external interrupt pins).", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 138, "fields": {"name": "mrf24j40", "path": "/RIOT/drivers/mrf24j40", "description": "Interface definition for MRF24J40 based drivers", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 139, "fields": {"name": "lc709203f", "path": "/RIOT/drivers/lc709203f", "description": "Device driver interface for the LC709203F Battery Fuel Gauge", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 140, "fields": {"name": "mtd_sdcard", "path": "/RIOT/drivers/mtd_sdcard", "description": "Driver for SD-cards using mtd interface", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 141, "fields": {"name": "adcxx1c", "path": "/RIOT/drivers/adcxx1c", "description": "I2C Analog-to-Digital Converter device driverThis driver works with adc081c, adc101c and adc121c versions.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 142, "fields": {"name": "pulse_counter", "path": "/RIOT/drivers/pulse_counter", "description": "Driver for the PULSE_COUNTER extra sensor", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 143, "fields": {"name": "apa102", "path": "/RIOT/drivers/apa102", "description": "Driver for chained APA102 RGB LEDs", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 144, "fields": {"name": "lis2dh12", "path": "/RIOT/drivers/lis2dh12", "description": "Driver for the STM LIS2DH12 accelerometerThis device driver provides a minimal interface to LIS2DH12 devices. As ofnow, it only provides very basic access to the device. The driver configuresthe device to continuously read the acceleration data with staticallydefined scale and rate, and with a fixed 10-bit resolution. The LIS2DH12&#39;sFIFO is bypassed, so the driver might not be sufficient for use cases wherethe complete history of readings is of interest.Also, the current version of the driver supports only interfacing the sensorvia SPI. The driver is however written in a way, that adding I2C interfacesupport is quite simple, as all bus related functions (acquire, release,read, write) are cleanly separated in the code.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 145, "fields": {"name": "sx127x", "path": "/RIOT/drivers/sx127x", "description": "Driver for Semtech SX1272 and SX1276 radios.This module contains the driver for radio devices of the Semtech SX127xseries (SX1272 and SX1276).Only LoRa long range modem is supported at the moment.SX127x modules are designed to be used in the ISM radio frequency (RF) band.This RF band depends on different regional regulations worldwide.Be careful to configure the device to use a RF frequency allowed in yourregion.Here is the list of allowed frequencies for your region (see[LoRaWAN regional parameters document available online](https://www.lora-alliance.org/for-developers)):- Europe has 2 allowed bands (ETSI):- EU863-870- EU433 (from 433.175MHZ to 434.665MHZ exactly)- US is US902-928- China has 2 allowed bands:- CN779-787 (from 779.5MHz to 786.5MHz exactly)- CN470-510 (from 470.3MHz to 509.7MHz exactly)- Australia is AU915-928- South asia, AS923:- Brune\u00ef [923-925 MHz]- Cambodia [923-925 MHz]- Hong Kong [920-925 MHz]- Indonesia [923-925 MHz]- Japan [920-928 MHz]- Laos [923-925 MHz]- New Zealand [915-928 MHz]- Singapore [920-925 MHz]- Taiwan [922-928 MHz]- Thailand [920-925 MHz]- Vietnam [920-925 MHz]- South Korea: KR920-923 (from 920.9MHz to 923.3MHz exactly)For more information on Semtech SX1272 and SX1276 modules see:- [SX1272/73 datasheet](http://www.semtech.com/images/datasheet/sx1272.pdf)- [SX1276/77/78/79 datasheet](http://www.semtech.com/images/datasheet/sx1276_77_78_79.pdf)", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 146, "fields": {"name": "tmp006", "path": "/RIOT/drivers/tmp006", "description": "Driver for the Texas Instruments TMP006 sensor.The TI TMP006 (Infrared Thermopile Contactless Temperature Sensor) measuresthe temperature of an object without need of direct contact with the object.After initialization the sensor can be set active for periodic measurements.&lt;br&gt; The conversion duration depends on oversample ratio. The oversampleratio can be determined by sensor initialization. The target objecttemperature can be calculated as follows:&lt;br&gt;&lt;br&gt;Temperature of sensor&#39;s die (2 times right shifting and devide-by 32):\\f{eqnarray*}{T_{\\mathrm{DIE}} &amp;=&amp; \\frac{T_{\\mathrm{RAW}}}{128}\\f}Difference Temperature in Kelvin:\\f{eqnarray*}{T_{\\mathrm{DIFF}} &amp;=&amp; T_{\\mathrm{DIE}} - T_{\\mathrm{REF}}\\f}Sensitivity of the thermopile sensor, with \\f$S_{\\mathrm{0}}\\f$ ascalibration factor:\\f{eqnarray*}{S &amp;=&amp; S_{\\mathrm{0}} \\cdot ( 1 + a_1 \\cdot T_{\\mathrm{DIFF}}+ a_2 \\cdot T_{\\mathrm{DIFF}}^2 ) \\\\\\f}Sensor&#39;s voltage (the LSB size is \\f$ 156.25\\,\\mathrm{nV} \\f$):\\f{eqnarray*}{V_{\\mathrm{OBJ}} &amp;=&amp; V_{\\mathrm{RAW}} \\cdot 156.25\\,\\mathrm{nV}\\f}Offset voltage:\\f{eqnarray*}{V_{OS} &amp;=&amp; b_0 + b_1 \\cdot T_{\\mathrm{DIFF}}+ b_2 \\cdot T_{\\mathrm{DIFF}}^2 \\\\\\f}Seebeck coefficients of the thermopile:\\f{eqnarray*}{f(V_{\\mathrm{OBJ}}) &amp;=&amp; (V_{\\mathrm{OBJ}} - V_{O\\mathrm{S}})+ c_2 \\cdot (V_{\\mathrm{OBJ}}- V_{\\mathrm{OS}})^2 \\\\\\f}Temperature of the target object:\\f{eqnarray*}{T_{\\mathrm{OBJ}} &amp;=&amp; \\sqrt[4]{T_{\\mathrm{DIE}}^4+ \\frac{f(V_{\\mathrm{OBJ}})}{S}} \\\\\\f}Constants:&lt;br&gt;\\f{eqnarray*}{a_{\\mathrm{1}} &amp;=&amp; 1.75 \\cdot 10^{-3} \\\\a_{\\mathrm{2}} &amp;=&amp; -1.678 \\cdot 10^{-5} \\\\T_{\\mathrm{REF}} &amp;=&amp; 298.15\\,\\mathrm{K} \\\\b_{\\mathrm{0}} &amp;=&amp; -2.94 \\cdot 10^{-5} \\\\b_{\\mathrm{1}} &amp;=&amp; -5.7 \\cdot 10^{-7} \\\\b_{\\mathrm{2}} &amp;=&amp; 4.63 \\cdot 10^{-9} \\\\c_{\\mathrm{2}} &amp;=&amp; 13.4\\f}The calculation and constants are wrapped from TI TMP006 User&#39;s Guide SBOU107.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 147, "fields": {"name": "nvram_spi", "path": "/RIOT/drivers/nvram_spi", "description": "", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 148, "fields": {"name": "lsm303dlhc", "path": "/RIOT/drivers/lsm303dlhc", "description": "Device driver for the LSM303DLHC 3D accelerometer/magnetometer", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 149, "fields": {"name": "hdc1000", "path": "/RIOT/drivers/hdc1000", "description": "Driver for the TI HDC1000 Humidity and Temperature SensorThe driver will initialize the sensor for best resolution (14 bit). Currentlythe driver doesn&#39;t use the heater. Temperature and humidity are acquired insequence. The sensor is always in sleep mode.The temperature and humidity values can either be acquired using thesimplified `hdc1000_read()` function, or the conversion can be triggeredmanually using the `hdc1000_trigger_conversion()` and `hdc1000_get_results()`functions sequentially. If using the second method, on must wait at least`HDC1000_CONVERSION_TIME` between triggering the conversion and reading theresults.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 150, "fields": {"name": "dynamixel", "path": "/RIOT/drivers/dynamixel", "description": "Drivers for any device using dynamixel&#39;s servomotors communication busThe bus is mainly used for servomotors, but a device can be anything : sensors, other actuators.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 151, "fields": {"name": "adt7310", "path": "/RIOT/drivers/adt7310", "description": "Driver for the Analog Devices ADT7310 temperature sensor.## DescriptionThe ADT7310 is a high accuracy digital temperature sensorin a narrow SOIC package. It contains a band gap temperaturereference and a 13-bit ADC to monitor and digitize thetemperature to a 0.0625\u00b0C resolution. The ADC resolution,by default, is set to 13 bits (0.0625 \u00b0C). This can be changedto 16 bits (0.0078 \u00b0C) by setting Bit 7 in the configurationregister (Register Address 0x01).The ADT7310 is guaranteed to operate over supply voltages from2.7 V to 5.5 V. Operating at 3.3 V, the average supply current istypically 210 \u03bcA. The ADT7310 has a shutdown mode thatpowers down the device and offers a shutdown current oftypically 2 \u03bcA. The ADT7310 is rated for operation over the\u221255\u00b0C to +150\u00b0C temperature range.## UsageSee `tests/driver_adt7310` for an example application using this driver.## CaveatsThis driver is currently missing support for a number of hardware features:- Interrupt and compare pins are not handled- There is no public API for setting the temperature alarm levels- Device SPI reset is not implemented (drive MISO high from the master while clocking SCK)", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 152, "fields": {"name": "io1_xplained", "path": "/RIOT/drivers/io1_xplained", "description": "Device driver interface for the Atmel IO1 Xplained extension.This board contains several sensors and actuators:", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 153, "fields": {"name": "bh1750fvi", "path": "/RIOT/drivers/bh1750fvi", "description": "Driver for the Rohm BH1750FVI ambient light sensor", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 154, "fields": {"name": "dsp0401", "path": "/RIOT/drivers/dsp0401", "description": "Device driver interface for the DSP0401 alphanumeric display", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 155, "fields": {"name": "pir", "path": "/RIOT/drivers/pir", "description": "Device driver interface for the PIR motion sensor", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 156, "fields": {"name": "bmx280", "path": "/RIOT/drivers/bmx280", "description": "Device driver interface for the Bosch BMP280 and BME280 sensors.BMP280 and BME280 measure temperature in centi \u00b0C and pressure in Pa. BME280can also measure relative humidity in %.For more information, see the datasheets:* [BMP280](https://ae-bst.resource.bosch.com/media/_tech/media/datasheets/BST-BMP280-DS001-18.pdf)* [BME280](https://ae-bst.resource.bosch.com/media/_tech/media/datasheets/BST-BME280_DS001-11.pdf)", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 157, "fields": {"name": "jc42", "path": "/RIOT/drivers/jc42", "description": "JC42 compliant temperature sensor driver## DescriptionThe connection between the MCU and jc42 compliant temperature sensors isbased on a I2C-interface. There are multiple jc42 compliant temperaturesensors available such as the mcp9804 and the MAX6604. This driver reads thetemperature from these sensors. The sensors support a alarm wire, but thisis not supported by this driver.", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 158, "fields": {"name": "pn532", "path": "/RIOT/drivers/pn532", "description": "PN532 NFC radio device driver", "group_identifier": "drivers", "transaction": 1}}, {"model": "api.module", "pk": 159, "fields": {"name": "mpl3115a2", "path": "/RIOT/drivers/mpl3115a2", "description": "Driver for the Freescale MPL3115A2 pressure sensor.The driver will initialize the sensor for pressure measurement. Theconversion duration depends on oversample ratio. After initializationthe sensor can be set active to run periodic measurements. The oversampleratio can be configured during sensor initialization.", "group_identifier": "drivers", "transaction": 1}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can add group", "content_type": 2, "codename": "add_group"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can change group", "content_type": 2, "codename": "change_group"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can delete group", "content_type": 2, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can add user", "content_type": 3, "codename": "add_user"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can change user", "content_type": 3, "codename": "change_user"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can delete user", "content_type": 3, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can add permission", "content_type": 4, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can change permission", "content_type": 4, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can delete permission", "content_type": 4, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add content type", "content_type": 5, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change content type", "content_type": 5, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete content type", "content_type": 5, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can add session", "content_type": 6, "codename": "add_session"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can change session", "content_type": 6, "codename": "change_session"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can delete session", "content_type": 6, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can add board", "content_type": 7, "codename": "add_board"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can change board", "content_type": 7, "codename": "change_board"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can delete board", "content_type": 7, "codename": "delete_board"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can add application", "content_type": 8, "codename": "add_application"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can change application", "content_type": 8, "codename": "change_application"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can delete application", "content_type": 8, "codename": "delete_application"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Has dev permissions", "content_type": 8, "codename": "has_dev_perm"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can add transaction", "content_type": 9, "codename": "add_transaction"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can change transaction", "content_type": 9, "codename": "change_transaction"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can delete transaction", "content_type": 9, "codename": "delete_transaction"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add module", "content_type": 10, "codename": "add_module"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change module", "content_type": 10, "codename": "change_module"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete module", "content_type": 10, "codename": "delete_module"}}, {"model": "auth.group", "pk": 1, "fields": {"name": "Developers", "permissions": [25]}}, {"model": "auth.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$36000$EsxFm2bQDvD4$lUA3sh6jTMY8iwcG862FHy5NsNZRv0W0uTGnTwhEGRg=", "last_login": "2018-02-15T13:40:56.000Z", "is_superuser": true, "username": "riot", "first_name": "", "last_name": "", "email": "riot@riot-os.org", "is_staff": true, "is_active": true, "date_joined": "2018-02-14T16:28:44Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 2, "fields": {"password": "pbkdf2_sha256$36000$UaGgZYt93KIG$cESiarHKitWFNoG+c1H4iddpj/NJzO2oMOMQyaA0gGQ=", "last_login": "2018-02-15T13:41:04.547Z", "is_superuser": false, "username": "user", "first_name": "", "last_name": "", "email": "", "is_staff": true, "is_active": true, "date_joined": "2018-02-14T16:36:27Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 3, "fields": {"password": "pbkdf2_sha256$36000$LCuF132QvtCo$dATT84snkCRT49ZXZGjnSKqJUr/hpnqHR48u7UCdJEE=", "last_login": "2018-02-15T13:39:58.020Z", "is_superuser": false, "username": "dev", "first_name": "", "last_name": "", "email": "", "is_staff": true, "is_active": true, "date_joined": "2018-02-14T16:36:47Z", "groups": [1], "user_permissions": []}}, {"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2018-02-14T16:29:39.735Z", "user": 1, "content_type": 3, "object_id": "1", "object_repr": "riot", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"user_permissions\"]}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2018-02-14T16:30:16.572Z", "user": 1, "content_type": 3, "object_id": "1", "object_repr": "riot", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2018-02-14T16:36:27.627Z", "user": 1, "content_type": 3, "object_id": "2", "object_repr": "user", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2018-02-14T16:36:36.807Z", "user": 1, "content_type": 3, "object_id": "2", "object_repr": "user", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2018-02-14T16:36:47.925Z", "user": 1, "content_type": 3, "object_id": "3", "object_repr": "dev", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2018-02-14T16:37:28.784Z", "user": 1, "content_type": 2, "object_id": "1", "object_repr": "Developers", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2018-02-14T16:37:40.953Z", "user": 1, "content_type": 3, "object_id": "3", "object_repr": "dev", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"groups\"]}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2018-02-14T16:37:49.695Z", "user": 1, "content_type": 3, "object_id": "1", "object_repr": "riot", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"user_permissions\"]}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2018-02-14T16:39:45.720Z", "user": 1, "content_type": 3, "object_id": "2", "object_repr": "user", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"password\"]}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2018-02-14T16:39:56.494Z", "user": 1, "content_type": 3, "object_id": "3", "object_repr": "dev", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"password\"]}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2018-02-14T16:40:32.701Z", "user": 1, "content_type": 3, "object_id": "3", "object_repr": "dev", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"is_staff\"]}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2018-02-14T16:40:39.833Z", "user": 1, "content_type": 3, "object_id": "2", "object_repr": "user", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"is_staff\"]}}]"}}]
